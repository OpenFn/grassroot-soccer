{
  "id": "18cadb7c-9f51-4454-9878-3d461cedf69a",
  "name": "grs-staging",
  "description": null,
  "concurrency": null,
  "inserted_at": "2025-05-30T04:28:28Z",
  "updated_at": "2025-06-09T08:46:50Z",
  "scheduled_deletion": null,
  "project_credentials": {
    "hunter@openfn.org-Salseforce-Tests": {
      "id": "22064325-01af-47ef-8498-0e53b3f98746",
      "name": "Salseforce Tests",
      "owner": "hunter@openfn.org"
    },
    "rediet@openfn.org-salesforce-sb-oauth": {
      "id": "a1ccb9ce-fd24-4afa-b870-4de5da40a435",
      "name": "salesforce sb oauth",
      "owner": "rediet@openfn.org"
    },
    "hunter@openfn.org-SalesForce-Sandbox-tests": {
      "id": "25e77eac-f301-4f0b-9617-1bea3ff01d9d",
      "name": "SalesForce Sandbox tests",
      "owner": "hunter@openfn.org"
    }
  },
  "history_retention_period": 7,
  "dataclip_retention_period": null,
  "retention_policy": "retain_all",
  "collections": {},
  "workflows": {
    "HIV-Testing-Event-Statistics": {
      "id": "0c72c582-ffc8-4163-af8f-d2104587950e",
      "name": "HIV Testing Event Statistics",
      "inserted_at": "2025-06-10T19:15:30.580261Z",
      "lock_version": 2,
      "triggers": {
        "webhook": {
          "enabled": true,
          "id": "f63a2965-aa4c-49b1-8b3c-7d24803c6252",
          "type": "webhook"
        }
      },
      "jobs": {
        "HIV-Testing-Event-Statistics": {
          "id": "5976cbe6-fd9f-4d2a-879c-0183e4aa5caa",
          "name": "HIV Testing Event Statistics",
          "body": "// push to production\nupsert(\n  'Event__c',\n  'CommCare_Case_ID__c',\n  fields(\n    field('Name', dataValue('form.event_name')),\n    field('CommCare_Case_ID__c', dataValue('form.case.@case_id')),\n    field('Tested_Negative_Males_0_9__c', dataValue('form.table_1_testing_results.male_hiv_negative.question2')),\n    field('Tested_Negative_Males_10_14__c', dataValue('form.table_1_testing_results.male_hiv_negative.question7')),\n    field('Tested_Negative_Males_15_19__c', dataValue('form.table_1_testing_results.male_hiv_negative.question13')),\n    field('Tested_Negative_Males_20_24__c', dataValue('form.table_1_testing_results.male_hiv_negative.question18')),\n    field('Tested_Negative_Males_25_49__c', dataValue('form.table_1_testing_results.male_hiv_negative.question28')),\n    field('Tested_Negative_Males_50__c', dataValue('form.table_1_testing_results.male_hiv_negative.question32')),\n    field('Tested_Positive_Males_0_9__c', dataValue('form.table_1_testing_results.question33.question36')),\n    field('Tested_Positive_Males_10_14__c', dataValue('form.table_1_testing_results.question33.question41')),\n    field('Tested_Positive_Males_15_19__c', dataValue('form.table_1_testing_results.question33.question45')),\n    field('Tested_Positive_Males_20_24__c', dataValue('form.table_1_testing_results.question33.question50')),\n    field('Tested_Positive_Males_25_49__c', dataValue('form.table_1_testing_results.question33.question56')),\n    field('Tested_Positive_Males_50__c', dataValue('form.table_1_testing_results.question33.question60')),\n    field('Tested_Negative_Females_0_9__c', dataValue('form.table_1_testing_results.question61.question65')),\n    field('Tested_Negative_Females_10_14__c', dataValue('form.table_1_testing_results.question61.question69')),\n    field('Tested_Negative_Females_15_19__c', dataValue('form.table_1_testing_results.question61.question73')),\n    field('Tested_Negative_Females_20_24__c', dataValue('form.table_1_testing_results.question61.question78')),\n    field('Tested_Negative_Females_25_49__c', dataValue('form.table_1_testing_results.question61.question84')),\n    field('Tested_Negative_Females_50__c', dataValue('form.table_1_testing_results.question61.question88')),\n    field('Tested_Positive_Females_0_9__c', dataValue('form.table_1_testing_results.question89.question92')),\n    field('Tested_Positive_Females_10_14__c', dataValue('form.table_1_testing_results.question89.question97')),\n    field('Tested_Positive_Females_15_19__c', dataValue('form.table_1_testing_results.question89.question101')),\n    field('Tested_Positive_Females_20_24__c', dataValue('form.table_1_testing_results.question89.question106')),\n    field('Tested_Positive_Females_25_49__c', dataValue('form.table_1_testing_results.question89.question112')),\n    field('Tested_Positive_Females_50__c', dataValue('form.table_1_testing_results.question89.question116')),\n    field(\n      'Pregnant_Women_Tested_0_9__c',\n      dataValue(\n        'form.table_3_pregnant_women_tested.enter_the_number_of_pregnant_women_tested_for_each_following_age_group.question120'\n      )\n    ),\n    field(\n      'Pregnant_Women_Tested_10_14__c',\n      dataValue(\n        'form.table_3_pregnant_women_tested.enter_the_number_of_pregnant_women_tested_for_each_following_age_group.question124'\n      )\n    ),\n    field(\n      'Pregnant_Women_Tested_15_19__c',\n      dataValue(\n        'form.table_3_pregnant_women_tested.enter_the_number_of_pregnant_women_tested_for_each_following_age_group.question129'\n      )\n    ),\n    field(\n      'Pregnant_Women_Tested_20_24__c',\n      dataValue(\n        'form.table_3_pregnant_women_tested.enter_the_number_of_pregnant_women_tested_for_each_following_age_group.question134'\n      )\n    ),\n    field(\n      'Pregnant_Women_Tested_25_49__c',\n      dataValue(\n        'form.table_3_pregnant_women_tested.enter_the_number_of_pregnant_women_tested_for_each_following_age_group.question140'\n      )\n    ),\n    field(\n      'Pregnant_Women_Tested_50__c',\n      dataValue(\n        'form.table_3_pregnant_women_tested.enter_the_number_of_pregnant_women_tested_for_each_following_age_group.question144'\n      )\n    ),\n    //field(\n    //  'Total_Pregnant_Women_Tested__c',\n    //  dataValue(\n    //    'form.table_3_pregnant_women_tested.enter_the_number_of_pregnant_women_tested_for_each_following_age_group.total_tested_pregnant'\n    //  )\n    //),\n    field(\n      'First_Time_Females_0_9__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.question61.question65')(state) +\n        dataValue('form.table_4_first_time_testers.question89.question92')(state)\n    ),\n    field(\n      'First_Time_Females_10_14__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.question61.question69')(state) +\n        dataValue('form.table_4_first_time_testers.question89.question97')(state)\n    ),\n    field(\n      'First_Time_Females_15_19__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.question61.question73')(state) +\n        dataValue('form.table_4_first_time_testers.question89.question101')(state)\n    ),\n    field(\n      'First_Time_Females_20_24__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.question61.question78')(state) +\n        dataValue('form.table_4_first_time_testers.question89.question106')(state)\n    ),\n    field(\n      'First_Time_Females_25_49__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.question61.question84')(state) +\n        dataValue('form.table_4_first_time_testers.question89.question112')(state)\n    ),\n    field(\n      'First_Time_Females_50__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.question61.question88')(state) +\n        dataValue('form.table_4_first_time_testers.question89.question116')(state)\n    ),\n    field(\n      'First_Time_Males_0_9__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.male_hiv_negative.question2')(state) +\n        dataValue('form.table_4_first_time_testers.question33.question36')(state)\n    ),\n    field(\n      'First_Time_Males_10_14__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.male_hiv_negative.question7')(state) +\n        dataValue('form.table_4_first_time_testers.question33.question41')(state)\n    ),\n    field(\n      'First_Time_Males_15_19__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.male_hiv_negative.question13')(state) +\n        dataValue('form.table_4_first_time_testers.question33.question45')(state)\n    ),\n    field(\n      'First_Time_Males_20_24__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.male_hiv_negative.question18')(state) +\n        dataValue('form.table_4_first_time_testers.question33.question50')(state)\n    ),\n    field(\n      'First_Time_Males_25_49__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.male_hiv_negative.question28')(state) +\n        dataValue('form.table_4_first_time_testers.question33.question56')(state)\n    ),\n    field(\n      'First_Time_Males_50__c',\n      state =>\n        dataValue('form.table_4_first_time_testers.male_hiv_negative.question32')(state) +\n        dataValue('form.table_4_first_time_testers.question33.question60')(state)\n    ),\n    field(\n      'of_Males_Referred_to_Sexual_Abuse__c',\n      dataValue(\n        'form.table5_referrals.enter_the_number_of_men_and_women_referred_for_each_referral_tye_and_the_or.abuseviolence_referral'\n      )\n    ),\n    field(\n      'of_Males_Referred_to_Family_Referral__c',\n      dataValue(\n        'form.table5_referrals.enter_the_number_of_men_and_women_referred_for_each_referral_tye_and_the_or.family_planning_referral'\n      )\n    ),\n    field(\n      'of_Males_Referred_for_HIV_Positive__c',\n      dataValue(\n        'form.table5_referrals.enter_the_number_of_men_and_women_referred_for_each_referral_tye_and_the_or.hiv_positive_referral'\n      )\n    ),\n    field(\n      'of_Males_Referred_to_MMC_Referral__c',\n      dataValue(\n        'form.table5_referrals.enter_the_number_of_men_and_women_referred_for_each_referral_tye_and_the_or.medical_male_circumcision_referral'\n      )\n    ),\n    field(\n      'of_Males_Referred_to_STI__c',\n      dataValue(\n        'form.table5_referrals.enter_the_number_of_men_and_women_referred_for_each_referral_tye_and_the_or.sexually_transmitted_infection_sti_referral'\n      )\n    ),\n    field(\n      'of_Males_Referred_to_Tuberculosis__c',\n      dataValue(\n        'form.table5_referrals.enter_the_number_of_men_and_women_referred_for_each_referral_tye_and_the_or.tuberculosis_tb_referral'\n      )\n    ),\n    field(\n      'of_Females_Referred_to_Sexual_Abuse__c',\n      dataValue('form.table5_referrals.women_referred_number.abuseviolence_referral_women')\n    ),\n    field(\n      'of_Females_Referred_to_Antenatal_Care__c',\n      dataValue('form.table5_referrals.women_referred_number.antenatal_care_anc_referral_women')\n    ),\n    field(\n      'of_Females_Referred_to_Family_Referral__c',\n      dataValue('form.table5_referrals.women_referred_number.family_planning_referral_women')\n    ),\n    field(\n      'of_Females_Referred_for_HIV_Positive__c',\n      dataValue('form.table5_referrals.women_referred_number.hiv_positive_referral_women')\n    ),\n    field(\n      'of_Females_Referred_to_PMTCT__c',\n      dataValue('form.table5_referrals.women_referred_number.prevention_of_mother-to-child_transmission_women')\n    ),\n    field(\n      'of_Females_Referred_to_STI__c',\n      dataValue('form.table5_referrals.women_referred_number.sexually_transmitted_infection_sti_referral_women')\n    ),\n    field(\n      'of_Females_Referred_to_Tuberculosis__c',\n      dataValue('form.table5_referrals.women_referred_number.tuberculosis_tb_referral_women')\n    ),\n    \n    field('Community_Members__c', dataValue('form.table_2_tested_profile.enter_the_number_tested_for_each_following_profile.community_members')),\n    field('GRS_Coaches__c', dataValue('form.table_2_tested_profile.enter_the_number_tested_for_each_following_profile.skillz_coaches')),\n    field('GRS_Participants__c', dataValue('form.table_2_tested_profile.enter_the_number_tested_for_each_following_profile.skillz_participants')),\n    field('GRS_Staff__c', dataValue('form.table_2_tested_profile.enter_the_number_tested_for_each_following_profile.staff')),\n    //field('Total_Tested__c', dataValue('form.table_2_tested_profile.enter_the_number_tested_for_each_following_profile.total_tested')),\n  )\n);\n",
          "adaptor": "@openfn/language-salesforce@2.7.4",
          "project_credential_id": null
        }
      },
      "edges": {
        "webhook->HIV-Testing-Event-Statistics": {
          "enabled": true,
          "id": "b1c73f0c-ffa2-4bad-8c31-a13ad6ce07e4",
          "target_job_id": "5976cbe6-fd9f-4d2a-879c-0183e4aa5caa",
          "source_trigger_id": "f63a2965-aa4c-49b1-8b3c-7d24803c6252",
          "condition_type": "js_expression",
          "condition_label": "HIV Testing Event Statistics",
          "condition_expression": "state.data.form[\"@name\"] == \"HIV Testing Event Statistics\" && state.data.form[\"business_unit\"] != \"57ac433fe0cb4319a701cc9e7c721816\""
        }
      }
    },
    "Coach-Session-Register": {
      "id": "07c2e349-ffeb-45be-a7f1-147a7bccb40b",
      "name": "Coach Session Register",
      "inserted_at": "2025-06-11T19:24:02.237297Z",
      "lock_version": 1,
      "triggers": {
        "webhook": {
          "enabled": true,
          "id": "f4e7c67d-393a-444f-80a0-1f5a137afb28",
          "type": "webhook"
        }
      },
      "jobs": {
        "Coach-Session-Register": {
          "id": "2b319a99-45a6-4377-87a4-b4403584d4c7",
          "name": "Coach Session Register",
          "body": "// push to production\nquery(\n  `SELECT Coach_A__c, Coach_A__r.Name from Event__c where CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`\n);\n\nfn(state => {\n  const present = dataValue('form.present')(state).toLowerCase();\n\n  function getSessionValue() {\n    let value;\n    switch (present) {\n      case 'yes':\n        value = 'X';\n        break;\n      case 'no':\n        value = 'A';\n        break;\n      case '':\n        value = 'N';\n        break;\n      default:\n        value = 'U';\n        break;\n    }\n    return value;\n  }\n\n  const session_text = dataValue('form.session')(state);\n\n  const session_id = session_text.trim().slice(0, session_text.indexOf(' ')).slice(1);\n  console.log(\"session_id: \", session_id);\n\n  const coachname = dataValue('form.coach_name')(state)\n    ? dataValue('form.coach_name')(state)\n    : state.references[0].records[0].Coach_A__r.Name;\n\n  let external_id = `${dataValue('form.case.@case_id')(state)}\n    ${coachname}`; //case_id + coach_name for external Id\n\n  state.data.commcare_external_id = external_id.toLowerCase().replace(/\\s/g, '').trim();\n\n  state.data.dynamicFields = [\n    field(`Session_${session_id}__c`, getSessionValue()),\n    field(`Session_${session_id}_Date__c`, dataValue('form.date')(state)),\n    //field(`Session_${session_id}_Duration__c`, dataValue('form.duration')(state)), //NOTE: Duration fields don't exist in SF?\n  ];\n\n  state.data.durationFields = [field(`Session_${session_id}_Duration__c`, dataValue('form.duration')(state))];\n  console.log(state.data.durationFields);\n\n  return state;\n});\n\nupsert('Event__c', 'CommCare_Case_ID__c', state => ({\n  ...fields(field('CommCare_Case_ID__c', dataValue('form.case.@case_id'))),\n  ...fields(...state.data.durationFields),\n}));\n\nquery(\n  `SELECT Coach_A__c, Coach_A__r.CommCare_Ext_ID__c from Event__c where CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`\n);\n\nfn(state => {\n  const coaches = dataValue('form.coach_name')(state).split(' ');\n  const dynamicFields = state.data.dynamicFields;\n  const commcare_external_id = state.data.commcare_external_id;\n  const caseid = state.data.form.case['@case_id'];\n  return each(\n    coaches,\n    upsert('Attendance__c', 'CommCare_Ext_ID__c', state => ({\n      ...fields(\n        //relationship('RecordType', 'Name', 'Coach Development'),\n        field('RecordTypeId', '012500000009jqaAAA'),\n        relationship('Event__r', 'CommCare_Case_ID__c', caseid),\n        relationship('Person_Attendance__r', 'CommCare_Ext_ID__c', state => {\n          const coach_name = state.data;\n          return coach_name;\n        }),\n        field('CommCare_Ext_ID__c', commcare_external_id)\n      ),\n      ...fields(...dynamicFields),\n    }))\n  )(state);\n});\n",
          "adaptor": "@openfn/language-salesforce@2.7.4",
          "project_credential_id": null
        }
      },
      "edges": {
        "webhook->Coach-Session-Register": {
          "enabled": true,
          "id": "6771766e-5128-4f70-8535-2582c1dbab35",
          "target_job_id": "2b319a99-45a6-4377-87a4-b4403584d4c7",
          "source_trigger_id": "f4e7c67d-393a-444f-80a0-1f5a137afb28",
          "condition_type": "js_expression",
          "condition_label": "Coach Session Register",
          "condition_expression": "state.data.form[\"@name\"] == \"Coach Session Register\" && state.data.form[\"business_unit\"] != \"57ac433fe0cb4319a701cc9e7c721816\""
        }
      }
    },
    "Upsert-Register-Participant": {
      "id": "72f468ce-2762-4c72-92f6-7a6a13c0e788",
      "name": "Upsert Register Participant",
      "inserted_at": "2025-06-12T06:49:37.386509Z",
      "lock_version": 1,
      "triggers": {
        "webhook": {
          "enabled": true,
          "id": "40ab87b7-c0f7-4849-8ba6-2bb1eb614af8",
          "type": "webhook"
        }
      },
      "jobs": {
        "Upsert-Register-Participant": {
          "id": "99282850-e1ee-4915-8898-911206d5f126",
          "name": "Upsert Register Participant",
          "body": "query(\n  `SELECT Id, Name, CommCare_Ext_ID__c FROM Event__c WHERE CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`\n);\n\nfn(state => {\n  // Note: lastReferenceValue selects the first item in the references array.\n  state.data.eventName = lastReferenceValue('records[0].CommCare_Ext_ID__c')(state);\n  state.data.eventCase = dataValue('form.case.@case_id')(state);\n\n  function objectToArray(object) {\n    return !Array.isArray(object) ? [object] : object;\n  }\n\n  const { form } = state.data;\n  if (form.question1) {\n    console.log('Ensuring that \"question1\" is an array.');\n    form.question1 = objectToArray(form.question1);\n  } else if (!form.new_participants) {\n    console.log('Nothing to upsert. No participants were registered');\n  } else {\n    console.log('Shifting \"new_participants\" to \"question1\" array.');\n    form.question1 = objectToArray(form.new_participants);\n    console.log('Creating a \"case\" object inside each item in that array.');\n    form.question1 = form.question1.map(item => ({\n      ...item,\n      case: item.create_skillz_plus_participant.case,\n    }));\n  }\n\n  console.log('Done with initial data manipulation.');\n  const persons = merge(\n    dataPath('form.question1[*]'),\n    fields(field('intervention_notes_to_save', dataValue('form.intervention_notes_to_save')))\n  )(state);\n\n  const attendances = merge(\n    dataPath('form.question1[*]'),\n    fields(\n      field('intervention_name', dataValue('form.intervention_name')),\n      field('eventCase', dataValue('eventCase')),\n      field('eventName', dataValue('eventName'))\n    )\n  )(state);\n\n  return { ...state, persons, attendances };\n});\n\neach(\n  'persons[*]',\n  upsert(\n    'Person__c',\n    'Participant_Identification_Number_PID__c',\n    fields(\n      field('Notes__c', dataValue('intervention_notes_to_save')),\n      field('First_Name__c', dataValue('participant_first_name')),\n      field('Surname__c', dataValue('participant_surname')),\n      relationship('RecordType', 'Name', 'Participant'),\n      relationship('Site__r', 'CommCare_Ext_ID__c', dataValue('grp_location.site_id')),\n      field('Participant_Identification_Number_PID__c', state => state.data.case['@case_id']),\n      field('Sex__c', dataValue('gender')),\n      field('Mobile_Number_1__c', dataValue('mobile_number')), //QUESTION: In CommCare, phone doesn't look like it's saving?\n      field('School_name_person__c', dataValue('school_name')),\n      field('Date_of_Birth__c', dataValue('date_of_birth')),\n      field('School_name_person__c', dataValue('school_name')),\n      field('Physical_Address__c', dataValue('participants_home_address')),\n      field('Age_1_0__c', dataValue('participants_age_to_save'))\n    )\n  )\n);\n\neach(\n  'attendances[*]',\n  upsert(\n    'Attendance__c',\n    'CommCare_Ext_ID__c',\n    fields(\n      field('CommCare_Ext_ID__c', state => {\n        const eventid = toUTF8(`${state.data.intervention_name}` || `${state.data.eventName}`); //dataValue('intervention_name')(state) || `${state.data.eventName}`;\n        const personid = state.data.case['@case_id'];\n        const value = personid + '-' + eventid.replace(/\\//gi, '');\n        return scrubEmojis(value, '');\n      }),\n      relationship(\n        //Attendance looks up to Persn via the case_id\n        'Person_Attendance__r',\n        'Participant_Identification_Number_PID__c',\n        state => state.data.case['@case_id']\n      ),\n      relationship(\n        //Attendance looks up to Event via the Event case_id\n        'Event__r',\n        'CommCare_Case_ID__c',\n        state => `${state.data.eventCase}`\n      ),\n      // relationship(\n      //   //Attendance looks up to Event via the intervention_name\n      //   'Event__r',\n      //   'CommCare_Ext_ID__c',\n      //   state => `${state.data.intervention_name}` || `${state.data.eventName}`\n      // ),\n      field('Date_of_Birth__c', dataValue('date_of_birth'))\n    )\n  )\n);\n\n//First we insert Person record\n// fn(state => {\n//   return upsert(\n//     'Person__c',\n//     'Participant_Identification_Number_PID__c',\n//     fields(\n//       field('Notes__c', dataValue('form.intervention_notes_to_save')),\n//       field('First_Name__c', dataValue('form.question1.participant_first_name')),\n//       field('Surname__c', dataValue('form.question1.participant_surname')),\n//       relationship('RecordType', 'Name', 'Participant'),\n//       field('Participant_Identification_Number_PID__c', state => state.data.case['@case_id']),\n//       field('Sex__c', dataValue('form.question1.gender')),\n//       //field('Age__c', dataValue('form.question1.age_in_years')), //This is a SF formula field, cannot map\n//       field('Mobile_Number_1__c', dataValue('form.question1.mobile_number')),\n//       field('School_name_person__c', dataValue('form.question1.school_name'))\n//     )\n//   )(state);\n// });\n\n// fn(state => {\n//   //Then we upsert related Attendance records\n//   return upsert(\n//     'Attendance__c',\n//     'CommCare_Ext_ID__c',\n//     fields(\n//       field('CommCare_Ext_ID__c', state => {\n//         var eventid = dataValue('form.intervention_name')(state);\n//         var personid = dataValue('form.case.@case_id')(state);\n//         return personid + '-' + eventid;\n//       }),\n//       relationship(\n//         //Attendance looks up to Persn via the case_id\n//         'Person_Attendance__r',\n//         'Participant_Identification_Number_PID__c',\n//         dataValue('form.case.@case_id')\n//       ),\n//       relationship(\n//         //Attendance looks up to Event via the intervention_name\n//         'Event__r',\n//         'Name',\n//         dataValue('form.intervention_name')\n//       ),\n//       field('Date_of_Birth__c', dataValue('form.question1.date_of_birth'))\n//     )\n//   )(state);\n// });\n",
          "adaptor": "@openfn/language-salesforce@4.3.0",
          "project_credential_id": null
        }
      },
      "edges": {
        "webhook->Upsert-Register-Participant": {
          "enabled": true,
          "id": "d7a4d4bf-1b98-42f7-8c60-76439054970a",
          "target_job_id": "99282850-e1ee-4915-8898-911206d5f126",
          "source_trigger_id": "40ab87b7-c0f7-4849-8ba6-2bb1eb614af8",
          "condition_type": "js_expression",
          "condition_label": "Register Participant",
          "condition_expression": "state.data.form[\"@name\"] == \"Register Participant\" && state.data.form[\"business_unit\"] != \"57ac433fe0cb4319a701cc9e7c721816\""
        }
      }
    },
    "Create-Intervention": {
      "id": "6b1b0e6d-4f63-48a8-91e1-95e12af6f05d",
      "name": "Create Intervention",
      "inserted_at": "2025-06-12T11:32:34.949786Z",
      "lock_version": 97,
      "triggers": {
        "webhook": {
          "enabled": true,
          "id": "12f161f8-8e03-42fb-8f42-44258e6396f9",
          "type": "webhook"
        }
      },
      "jobs": {
        "Create-Intervention": {
          "id": "dc57d852-9ca5-4761-8399-e68acd9bb7f4",
          "name": "Create Intervention",
          "body": "\nquery(`SELECT Id FROM Account WHERE Name = 'Test Account' Limit 1`);\nfn((state) => {\n  function clean(str) {\n    if (!!str)\n      return str\n        .split(\"_\")\n        .map((word) => {\n          let new_word = word.toString().toLowerCase();\n          return new_word.slice(0, 1).toUpperCase() + new_word.slice(1);\n        })\n        .join(\" \");\n  }\n\n  state.data.form.delivery_method = clean(state.data.form.delivery_method);\n\n\n  state.data.destinationCoachFields = state.data.form.coaches\n    .split(\" \")\n    .reduce((accumulator, currentValue, currentIndex) => {\n      if (!!currentValue) {\n        return {\n          ...accumulator,\n          [`Event_Participation__r`]: { CommCare_External_ID__c: currentValue },\n        };\n      }\n      return accumulator;\n    }, {});\n\n  return state;\n});\nfn((state) => {\n  const buMapping = {\n    \"65680f0c4c144b03ad0f86bdc46c1ebc\": \"GRS Zambia\",\n    \"04d98397e28046118fade28ced6b65cb\": \"GRS Zimbabwe\",\n    ed125ab19ec34aacab79585e59eb76f4: \"GRS Partnerships\",\n  };\n\n  const bu = state.data.form.business_unit;\n\n  state.mapping = {\n    Name: state.data.form.name_of_intervention,\n    CommCare_External_ID__c: state.data.form.case[\"@case_id\"],\n    // 'RecordType__r.Name':  \"Intervention Event\",\n    'RecordType': {\n      \"Name\": 'Intervention Event'\n    },\n  \n    ampi__Account__c: \"001O300000egVbUIAU\", // To be removed later\n    // ampi__Account__r: {\n    //   Name: \"Test Account\"\n    // },\n      // Name: buMapping[bu] || undefined, \n    // },\n    //Venue__c:  state.data.form.Venue, //currently doensn't have an extId configured so this doesn't work\n    // Curriculum__c: { //currently doensn't have an extId configured so this doesn't work\n    //   CommCare_External_ID__c: state.data.form.curriculum_selection.curriculum,\n    // },\n    Delivery_method__c: state.data.form.delivery_method,\n    Class_Group_Team__c: state.data.form.class_grade,\n    // Pre_Post_Administered__c: state.data.form.prepost_administered,\n    ampi__Start_Date__c: state.data.form.intervention_dates.start_date,\n    ampi__End_Date__c: state.data.form.intervention_dates.end_date,\n    Number_of_Coaches__c: state.data.form.num_coaches\n    // ...state.data.destinationCoachFields,\n  };\n\n  console.log(state.mapping);\n  return state;\n});\n\n// upsert(\"ampi__Project__c\", \"CommCare_External_ID__c\", $.mapping)\nupsert(\"ampi__Project__c\", \"CommCare_External_ID__c\", {...$.mapping})\n\n\n",
          "adaptor": "@openfn/language-salesforce@2.7.4",
          "project_credential_id": "22064325-01af-47ef-8498-0e53b3f98746"
        }
      },
      "edges": {
        "webhook->Create-Intervention": {
          "enabled": true,
          "id": "4cfe6233-ef8d-4564-87ce-219626cf1168",
          "target_job_id": "dc57d852-9ca5-4761-8399-e68acd9bb7f4",
          "source_trigger_id": "12f161f8-8e03-42fb-8f42-44258e6396f9",
          "condition_type": "js_expression",
          "condition_label": "Create Intervention",
          "condition_expression": "state.data.form[\"@name\"] == \"Create Intervention\" && state.data.form[\"business_unit\"] != \"57ac433fe0cb4319a701cc9e7c721816\""
        }
      }
    },
    "Upsert-Intervention-Notes": {
      "id": "af5d8aad-a62b-4c6f-9d58-533b5edee4d7",
      "name": "Upsert Intervention Notes",
      "inserted_at": "2025-06-12T11:45:46.681557Z",
      "lock_version": 5,
      "triggers": {
        "webhook": {
          "enabled": true,
          "id": "ebd0adec-f328-4b50-8d9e-dc2e5b88c4c0",
          "type": "webhook"
        }
      },
      "jobs": {
        "Upsert-Intervention-Notes": {
          "id": "2665ba02-76bb-4433-8460-58384c8779e3",
          "name": "Upsert Intervention Notes",
          "body": "//openfn.org source \nupsert(\n  'ampi__Project__c',\n  'CommCare_External_ID__c',\n  fields(\n    field('CommCare_External_ID__c', dataValue('form.case.@case_id')),\n    //field('Name', dataValue('form.intervention_name')),\n    field('Notes__c', dataValue('form.intervention_notes_to_save')),\n    relationship('RecordType', 'Name', 'Intervention Event')\n  )\n);\n",
          "adaptor": "@openfn/language-salesforce@2.7.4",
          "project_credential_id": "22064325-01af-47ef-8498-0e53b3f98746"
        }
      },
      "edges": {
        "webhook->Upsert-Intervention-Notes": {
          "enabled": true,
          "id": "614e0b06-212b-4cdf-8c09-d0a1c81ff7b4",
          "target_job_id": "2665ba02-76bb-4433-8460-58384c8779e3",
          "source_trigger_id": "ebd0adec-f328-4b50-8d9e-dc2e5b88c4c0",
          "condition_type": "js_expression",
          "condition_label": "Intervention Notes",
          "condition_expression": "state.data.form[\"@name\"] == \"Intervention Notes\" && state.data.form[\"business_unit\"] != \"57ac433fe0cb4319a701cc9e7c721816\""
        }
      }
    },
    "Upsert-Home-Visit-Log-Form": {
      "id": "0f33067f-02da-47fb-bd70-641fcd3206c7",
      "name": "Upsert Home Visit Log Form",
      "inserted_at": "2025-06-12T20:04:50.626432Z",
      "lock_version": 74,
      "triggers": {
        "webhook": {
          "enabled": true,
          "id": "1ffefeab-267b-4369-830b-062752cc08b5",
          "type": "webhook"
        }
      },
      "jobs": {
        "Upsert-Home-Visit-Log-Form": {
          "id": "aed33858-5891-4337-871c-1a1350fe4041",
          "name": "Upsert Home Visit Log Form",
          "body": "// push to production\n\nquery(\n  `SELECT Participant_Identification_Number_PID__c from Contact where Participant_Identification_Number_PID__c  = '${state.data.form.case['@case_id']}'`\n);\nquery(\n        `SELECT Id, Event_Session__c, CreatedDate, Attendee__c, Attendee__r.Contact__r.Participant_Identification_Number_PID__c, Attendee__r.Event__c\n        FROM Attendance__c\n        WHERE Attendee__r.Contact__r.Participant_Identification_Number_PID__c = '${state.data.form.case['@case_id']}'\n        ORDER BY CreatedDate DESC LIMIT 1`\n      ).then(state => {\n        const { records } = state.references[0];\n        const eventId = records[0].Attendee__r.Event__c;\n        state.data.eventField = [field('Event__c', eventId)];\n        state.data.eventId = eventId\n        return state;\n      });\nfn(state => {\n  // const PID = lastReferenceValue('records[1].Participant_Identification_Number_PID__c')(state);\n  // if (!PID) {\n  //   console.log(\n  //     `Participant not found with Participant_Identification_Number_PID__c: ${state.data.form.case['@case_id']}`\n  //   );\n  //   return state;\n  // } // @hunter this should throw an error, not just return state\n   state.mapping = {\n      CommCare_External_ID__c: state.data.id,\n\n      Parent_mobile_number__c: state.data.form.basic_information.Mobile_number,\n      Visit_Date__c: state.data.form.participant_infomation.visit_information.visit_date,\n      // Pre_Post_Administered__c: state.data.form.prepost_administered,\n      Description__c: state.data.form.administrative.visit_notes,\n      Parent_consent__c: state.data.form.basic_information.consent_received === 'yes'?true:false,\n   \n      Reason_for_Home_Visit__c: state.data.form.participant_infomation.reason_for_home_visit,\n      // Event_Participation__r: { \n      //   CommCare_External_ID__c: state.data.eventId + \"-\" + state.data.form.case['@case_id']\n      // },\n      // Coach__r: {\n      //   CommCare_External_ID__c: state.data.eventId + \"-\" + state.data.form.basic_information.coach_id\n      // },\n      Intervention__c: state.eventId,\n      RecordType: {\n        Name: \"Home Visit\"\n      } \n     \n    }\n\n    console.log(state.mapping)\n\nreturn state\n\n});\n\nupsert('Visit__c', 'CommCare_External_ID__c', {...$.mapping}) //@hunter this will execute even if participant is not found\n\n",
          "adaptor": "@openfn/language-salesforce@2.7.4",
          "project_credential_id": "22064325-01af-47ef-8498-0e53b3f98746"
        }
      },
      "edges": {
        "webhook->Upsert-Home-Visit-Log-Form": {
          "enabled": true,
          "id": "7809898f-c983-4b66-8abb-86db22df3a37",
          "target_job_id": "aed33858-5891-4337-871c-1a1350fe4041",
          "source_trigger_id": "1ffefeab-267b-4369-830b-062752cc08b5",
          "condition_type": "js_expression",
          "condition_label": "Home Visit Log Form",
          "condition_expression": "state.data.form[\"@name\"] == \"Home Visit Log Form\" && state.data.form[\"basic_information\"][\"business_unit\"] != \"57ac433fe0cb4319a701cc9e7c721816\""
        }
      }
    },
    "Attendance-Non-Skillz": {
      "id": "e6483b6f-68b9-436c-9125-f6be0ead714d",
      "name": "Attendance Non Skillz",
      "inserted_at": "2025-06-12T20:11:26.055732Z",
      "lock_version": 10,
      "triggers": {
        "webhook": {
          "enabled": true,
          "id": "503f2fa4-9829-4e8a-8e50-ad715cecd975",
          "type": "webhook"
        }
      },
      "jobs": {
        "Attendance-Non-Skillz": {
          "id": "cfb5934c-9f60-4ce3-89e7-c3b534ce755e",
          "name": "Attendance Non Skillz",
          "body": "fn(state => {\n  if (!state.data.form.attendance_list.update_participant_cases.item) {\n    console.log('No participant attendance data was provided, not upserting to Salesforce.');\n    return state;\n  } else {\n\n    return execute(\n      fn(state => {\n       \n        // function getSessionValue(present) {\n        //   switch (present.toString().toLowerCase()) {\n        //     case 'yes':\n        //       return 'Attended';\n        //     case 'no':\n        //       return 'Not Attended';\n        //     case '':\n        //       return 'Not Attended';\n        //     default:\n        //       return 'Not Attended';\n        //   }\n        // }\n\n        // function getSessionId(session_text) {\n        //   return session_text.toString().trim().slice(0, session_text.indexOf(' ')).slice(1);\n        // }\n\n        function objectToArray(object) {\n          if (!object) return [];\n          return !Array.isArray(object) ? [object] : object;\n        }\n\n        state.data.form.attendance_list.update_participant_cases.item = objectToArray(\n          state.data.form.attendance_list.update_participant_cases.item\n        );\n        \n        //When GRS enters session names incorrectly in CommCare (e.g., session: \"P8 // My body is mine)\n        // function findPValue(input) {\n        //   // Regular expression to match \"P\" followed by one or more digits, then \"//\"\n        //     const regex = /P(\\d+)\\s*\\/\\//;\n    \n        //   // Match the input against the regex\n        //   const match = input.match(regex);\n    \n        //   // If a match is found, return the captured digits as an integer\n        //   if (match) {\n        //     return parseInt(match[1], 10);\n        //   } else {\n        //     // If no match is found, return null or handle as needed\n        //   return 'Session_not_found';\n        // }\n// }\n\n        // const sessionText = dataValue('form.attendance_list.session')(state);\n        // const sessionId = sessionText.includes('//') ? findPValue(sessionText) : getSessionId(sessionText);\n        \n        // console.log('sessionText:: ', sessionText); \n        // console.log('sessionId:: ', sessionText); \n        \n        // const sessionDate = dataValue(\"form.case['@date_modified']\")(state);\n\n        // state.data.form.attendance_list.update_participant_cases.item =\n        //   state.data.form.attendance_list.update_participant_cases.item.map(item => {\n        //     const sessionValue = getSessionValue(item.attendance_session);\n        //     return {\n        //       ...item,\n        //       dynamicFields: {\n        //         [`Session_${sessionId}__c`]: sessionValue,\n        //         [`Session_${sessionId}_Date__c`]: sessionDate,\n        //       },\n        //     };\n        //   });\n\n        return state;\n      }),\n\n      each(\n        merge(\n          dataPath('form.attendance_list.update_participant_cases.item[*]'),\n          fields(\n            field('intervention_name', dataValue('form.intervention_name')),\n            field('caseid', dataValue('form.case.@case_id')),\n            field('event_session_id', state => {\n            return state.data.form.case['@case_id'] + \"-\" + state.data.form.attendance_list.session.replace(/\\/\\/\\s*/g, '');\n          })\n          )\n        ),\n        upsert('Attendance__c', 'CommCare_External_ID__c', state => ({\n          ...fields(\n            relationship('Event_Session__r', 'CommCare_External_ID__c', dataValue('event_session_id')),\n            field(\n              'CommCare_External_ID__c',\n              state => `${state.data.event_session_id}-${state.data['@id']}`\n            ),\n            relationship('Attendee__r', 'Contact', dataValue('@id')),\n            field('Attended__c', dataValue('attendance_session').toString().toLowerCase() === 'yes'? \"Attended\": \"Not Attended\")\n          )\n        }))\n      )\n    )(state);\n  }\n});\n",
          "adaptor": "@openfn/language-salesforce@4.3.0",
          "project_credential_id": "22064325-01af-47ef-8498-0e53b3f98746"
        }
      },
      "edges": {
        "webhook->Attendance-Non-Skillz": {
          "enabled": true,
          "id": "fb25c92c-6f96-4e76-8648-b8ec2bd6825b",
          "target_job_id": "cfb5934c-9f60-4ce3-89e7-c3b534ce755e",
          "source_trigger_id": "503f2fa4-9829-4e8a-8e50-ad715cecd975",
          "condition_type": "js_expression",
          "condition_label": "Attendance Generic",
          "condition_expression": "state.data.form[\"@name\"] == \"Attendance\" && state.data.form[\"business_unit\"] != \"57ac433fe0cb4319a701cc9e7c721816\""
        }
      }
    }
  },
  "allow_support_access": true,
  "requires_mfa": false
}